services:
  db:
    container_name: 'postgres'
    image: postgres
    environment:
      POSTGRES_DB: visual
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d visual"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - /postgres-data:/save-data/postgresql/data
    networks:
      - visual

  frontend:
    container_name: 'frontend'
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      api:
        condition: service_started
    ports:
      - '3000:3000'
    networks:
      - visual

  api:
    container_name: 'backend'
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PG_HOST: db
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_started
    networks:
      - visual

  nginx:
    container_name: "visual-nginx"
    image: nginx:stable
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/newcert.key:/etc/newcert.key
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      api:
        condition: service_started
      # frontend:
      #   condition: service_started
    networks:
      - visual


  redis:
    container_name: 'redis'
    image: redis
    restart: always
    ports:
      - '6379:6379'
    depends_on:
      db:
        condition: service_started
    networks:
      - visual

volumes:
  postrges-data:

networks:
  visual:
    driver: bridge
